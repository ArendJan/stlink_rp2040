{
    "version": "2.0.0",
    "tasks": [
        // {
        //     "label": "Compile Project",
        //     "type": "process",
        //     "isBuildCommand": true,
        //     "command": "${userHome}/.pico-sdk/ninja/v1.12.1/ninja",
        //     "args": ["-C", "${workspaceFolder}/build"],
        //     "group": "build",
        //     "presentation": {
        //         "reveal": "always",
        //         "panel": "dedicated"
        //     },
        //     "problemMatcher": "$gcc",
        //     "windows": {
        //         "command": "${env:USERPROFILE}/.pico-sdk/ninja/v1.12.1/ninja.exe"
        //     }
        // },
        // {
        //     "label": "Run Project",
        //     "type": "process",
        //     "command": "${env:HOME}/.pico-sdk/picotool/2.0.0/picotool/picotool",
        //     "args": [
        //         "load",
        //         "${command:raspberry-pi-pico.launchTargetPath}",
        //         "-fx"
        //     ],
        //     "presentation": {
        //         "reveal": "always",
        //         "panel": "dedicated"
        //     },
        //     "problemMatcher": [],
        //     "windows": {
        //         "command": "${env:USERPROFILE}/.pico-sdk/picotool/2.0.0/picotool/picotool.exe"
        //     }
        // },
        // {
        //     "label": "Flash",
        //     "type": "process",
        //     "command": "${userHome}/.pico-sdk/openocd/0.12.0+dev/openocd.exe",
        //     "args": [
        //         "-s",
        //         "${userHome}/.pico-sdk/openocd/0.12.0+dev/scripts",
        //         "-f",
        //         "interface/cmsis-dap.cfg",
        //         "-f",
        //         "target/${command:raspberry-pi-pico.getTarget}.cfg",
        //         "-c",
        //         "adapter speed 5000; program \"${command:raspberry-pi-pico.launchTargetPath}\" verify reset exit"
        //     ],
        //     "problemMatcher": [],
        //     "windows": {
        //         "command": "${env:USERPROFILE}/.pico-sdk/openocd/0.12.0+dev/openocd.exe",
        //     }
        // },
        // {
        //     "label": "FlashBMP",
        //     "type": "process",
        //     // nTODO: change the path to your blackmagic binary
        //     "command": "/home/arendjan/mirte/blackmagic/build/blackmagic",
        //     "args": [
        //         // "-s",
        //         // "${userHome}/.pico-sdk/openocd/0.12.0+dev/scripts",
        //         // "-f",
        //         // "interface/cmsis-dap.cfg",
        //         // "-f",
        //         // "target/${command:raspberry-pi-pico.getTarget}.cfg",
        //         // "-c",
        //         // "adapter speed 5000; program \"${command:raspberry-pi-pico.launchTargetPath}\" verify reset exit"
        //         "--device", "/dev/ttyACM1", "${workspaceFolder}/build/hello_world.bin", "-w", "-V"
        //     ],
        //     "problemMatcher": [],
        //     // "windows": {
        //     //     "command": "${env:USERPROFILE}/.pico-sdk/openocd/0.12.0+dev/openocd.exe",
        //     // }
        // },
        // {
        //     "label": "BuildAndFlashBMP", // not used in tasks
        //     "type": "process",
        //     // "dependsOn": ["CMake: Build"],
        //     "command": "/home/arendjan/mirte/blackmagic/build/blackmagic",
        //     // nTODO: change the path to the output binary
        //     "args": [
        //         "--device", "/dev/ttyACM1", "${workspaceFolder}/build/hello_world.bin", "-w", "-V"
        //     ],
        //     "problemMatcher": [],
        //     // "windows": {
        //     //     "command": "${env:USERPROFILE}/.pico-sdk/openocd/0.12.0+dev/openocd.exe",
        //     // }
        // },
    
        {
            "label": "prepareBuild", // just makes the build folder if not existing
            "type": "shell",
            "command": "[[ -d ${workspaceFolder}/build ]] || cmake -B ${workspaceFolder}/build -S . -DCMAKE_BUILD_TYPE=Debug", // if not exist build folder, then cmake -B build -S . with Debug build type
            "windows": {
                "command": "cmd.exe",
                "args": [
                    "/c",
                    "if not exist \\\"${workspaceFolder}\\build\\\" ( cmake -B \\\"${workspaceFolder}\\build\\\" -S . -DCMAKE_BUILD_TYPE=Debug -GNinja ) "
                ]
            },
        },
        {
            "label": "build", // builds the project
            "type": "shell",
            "command": "cmake --build \"${workspaceFolder}/build\"",
            "dependsOn": ["prepareBuild"], // make sure cmake is prepared before building
            "windows": {
                "command": "cmd.exe",
                "args": [
                    "/C",
                    "cmake --build \\\"${workspaceFolder}\\build\\\""
                ]
            },
        },
        {
            "label": "triggerBMPAndBuild",
            "type": "shell",
            "dependsOn": ["build"],
            // stlink-tool from https://github.com/jeanthom/stlink-tool is used to trigger BMP to go to normal mode.
            // TODO: change the path to your stlink-tool binary
            "command": "/home/arendjan/mirte/stlink-tool/stlink-tool", // stlink boots with DFU mode, so need to trigger it to go to normal mode. After first one, it will be in normal mode and this will not do anything.
            "args": [
            ],
            
            "problemMatcher": [],
            "windows" : {
                // Windows: downloaded from https://github.com/sakana280/stlink-tool/releases/download/1.0-Win64/stlink-tool.exe , copied to the binaries folder
                // don't forget to use Zadig to install the driver for the BMP, must be libusbK. The blackmagicprobe will show up as WINUSB device. No need to change it.
                "command": "cmd.exe",
                "args": [
                    "/C",
                    "\\\"${workspaceFolder}/binaries/stlink-tool.exe\\\" || cd . ", // cd . is a dummy command to make sure the task runs successfully
                ]
               
            }
        }
    ]
}
